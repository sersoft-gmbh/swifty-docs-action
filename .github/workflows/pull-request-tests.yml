name: Pull Request Tests

on:
  pull_request:
    branches: [ master ]

jobs:
  test-defaults:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.2.3
        if: runner.os == 'macOS'
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/SwiftyActions@v1.3
        with:
          release-version: 5.4
      - name: Install dependencies
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2
      - name: Generate action code
        run: npm run deploy
      - uses: './'
        with:
          source: __test__/TestProject
      - name: Check for SPM build
        run: test -d __test__/TestProject/.build
        # We can't really check for more here, since we don't specify more.

  test-customized:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        output: [docs, otherDocs]
        clean: [true, false]
        module-version: ['1.2.3', '0.0.1']
    runs-on: ${{matrix.os}}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.2.3
        if: runner.os == 'macOS'
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/SwiftyActions@v1.3
        with:
          release-version: 5.4
      - name: Install dependencies
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2
      - name: Generate action code
        run: npm run deploy
      - name: Create output folder with dummy file
        run: ./__test__/bin/create_clean_test_file.sh ${{matrix.output}}
      - uses: './'
        with:
          source: __test__/TestProject
          module-version: ${{matrix.module-version}}
          clean: ${{matrix.clean}}
          output: ${{matrix.output}}
      - name: Check for SPM build
        run: test -d __test__/TestProject/.build
      - name: Check output path
        run: test -d "${{matrix.output}}"
      - name: Check index.html exists
        run: test -f "${{matrix.output}}/index.html"
      - name: Check version in index.html
        run: cat "${{matrix.output}}/index.html" | grep -q '${{matrix.module-version}}'
      - name: Check clean
        run: ./__test__/bin/check_clean.sh ${{matrix.output}} ${{matrix.clean}}

  test-customized-xcode:
    strategy:
      matrix:
        output: [ docs, otherDocs ]
        clean: [ true, false ]
        module-version: [ '1.2.3', '0.0.1' ]
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          xcode-version: ^12.4
      - name: Install dependencies
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2
      - name: Generate action code
        run: npm run deploy
      - name: Create output folder with dummy file
        run: ./__test__/bin/create_clean_test_file.sh ${{matrix.output}}
      - uses: './'
        with:
          source: __test__/TestProject
          module-version: ${{matrix.module-version}}
          clean: ${{matrix.clean}}
          output: ${{matrix.output}}
          xcodebuild-destination: 'platform=macOS'
      - name: Check for Xcode SPM build
        run: test -d __test__/TestProject/.swiftpm
      - name: Check output path
        run: test -d "${{matrix.output}}"
      - name: Check index.html exists
        run: test -f "${{matrix.output}}/index.html"
      - name: Check version in index.html
        run: cat "${{matrix.output}}/index.html" | grep -q '${{matrix.module-version}}'
      - name: Check clean
        run: ./__test__/bin/check_clean.sh ${{matrix.output}} ${{matrix.clean}}
