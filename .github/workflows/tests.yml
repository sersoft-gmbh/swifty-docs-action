name: Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'dist/*.js'
      - '__test__/**'
      - '.github/actions/generate-action-code/**'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main ]

jobs:
  test-spm:
    name: Test using SPM
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    env:
      INPUT_PACKAGE_PATH: __test__/TestProject
      INPUT_PACKAGE_VERSION: 1.0.0
      INPUT_OUTPUT: docs
    runs-on: ${{ matrix.os }}
    steps:
      - uses: vapor/swiftly-action@v0.2
        with:
          toolchain: latest
      - uses: actions/checkout@v4
      - name: Generate action code
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/generate-action-code
      - uses: sersoft-gmbh/swifty-docs-action@main
        if: ${{ github.event_name == 'push' }}
        with:
          package-path: ${{ env.INPUT_PACKAGE_PATH }}
          checkout-path: ${{ env.INPUT_PACKAGE_PATH }}
          package-version : ${{ env.INPUT_PACKAGE_VERSION }}
          output: ${{ env.INPUT_OUTPUT }}
      - uses: './'
        if: ${{ github.event_name == 'pull_request' }}
        with:
          package-path: ${{ env.INPUT_PACKAGE_PATH }}
          checkout-path: ${{ env.INPUT_PACKAGE_PATH }}
          package-version : ${{ env.INPUT_PACKAGE_VERSION }}
          output: ${{ env.INPUT_OUTPUT }}
      - name: Check for SPM build
        run: test -d '__test__/TestProject/.build'
      - name: Check output path
        run: test -d "${INPUT_OUTPUT}"
      - name: Check docc archive(s) or index.html exist
        run: |
          FOUND=0
          for file in "${INPUT_OUTPUT}"/*.doccarchive; do
            FOUND=1
            break
          done
          if [ $FOUND -eq 0 ]; then
            echo "No docc archive found, checking for index.html"
            test -f "${INPUT_OUTPUT}/index.html"
          fi

  test-xcode:
    name: Test using Xcode
    env:
      INPUT_PACKAGE_PATH: __test__/TestProject
      INPUT_PACKAGE_VERSION: 1.0.0
      INPUT_USE_XCODEBUILD: true
      INPUT_XCODEBUILD_SCHEME: TestProject-Package
      INPUT_XCODEBUILD_DESTINATION: 'platform=macOS'
      INPUT_OUTPUT: docs
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        if: ${{ runner.os == 'macOS' }}
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v4
      - name: Generate action code
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/generate-action-code
      - uses: sersoft-gmbh/swifty-docs-action@main
        if: ${{ github.event_name == 'push' }}
        with:
          package-path: ${{ env.INPUT_PACKAGE_PATH }}
          package-version : ${{ env.INPUT_PACKAGE_VERSION }}
          checkout-path: ${{ env.INPUT_PACKAGE_PATH }}
          use-xcodebuild: ${{ env.INPUT_USE_XCODEBUILD }}
          xcodebuild-scheme: ${{ env.INPUT_XCODEBUILD_SCHEME }}
          xcodebuild-destination: ${{ env.INPUT_XCODEBUILD_DESTINATION }}
          output: ${{ env.INPUT_OUTPUT }}
      - uses: './'
        if: ${{ github.event_name == 'pull_request' }}
        with:
          package-path: ${{ env.INPUT_PACKAGE_PATH }}
          package-version : ${{ env.INPUT_PACKAGE_VERSION }}
          checkout-path: ${{ env.INPUT_PACKAGE_PATH }}
          use-xcodebuild: ${{ env.INPUT_USE_XCODEBUILD }}
          xcodebuild-scheme: ${{ env.INPUT_XCODEBUILD_SCHEME }}
          xcodebuild-destination: ${{ env.INPUT_XCODEBUILD_DESTINATION }}
          output: ${{ env.INPUT_OUTPUT }}
      - name: Check for Xcode SPM build
        run: test -d '__test__/TestProject/.swiftpm'
      - name: Check output path
        run: test -d "${INPUT_OUTPUT}"
      - name: Check docc archive(s) or index.html exist
        run: |
          FOUND=0
          for file in "${INPUT_OUTPUT}"/*.doccarchive; do
            FOUND=1
            break
          done
          if [ $FOUND -eq 0 ]; then
            echo "No docc archive found, checking for index.html"
            test -f "${INPUT_OUTPUT}/index.html"
          fi
